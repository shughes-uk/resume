name: Deploy
on:
  push:
    branches:
      - main
env:
  TF_CLOUD_ORGANIZATION: "shughesuk"
  CONFIG_DIRECTORY: "./"
jobs:
  # deploy-backend:
  #   outputs:
  #     sha: ${{ steps.short_sha.outputs.sha }}
  #   environment: backend-production
  #   concurrency: backend-production
  #   permissions:
  #     id-token: write
  #     contents: read
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Get short SHA
  #       id: short_sha
  #       run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: true
  #         tags: shughesuk/backend:${{ steps.short_sha.outputs.sha }}
  # run-migrations:
  #   name: "Run Migrations"
  #   runs-on: ubuntu-latest
  #   needs: deploy-backend
  #   permissions:
  #     contents: read
  #     id-token: write
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: configure aws credentials
  #       uses: aws-actions/configure-aws-credentials@v4.0.2
  #       with:
  #         role-to-assume: arn:aws:iam::905418398753:role/github-actions-role
  #         role-session-name: GitHub_to_AWS_via_FederatedOIDC
  #         aws-region: "us-east-1"
  #     - uses: prefix-dev/setup-pixi@v0.5.1
  #       with:
  #         cache: true
  #         locked: true
  #     - name: Update task
  #       run: pixi run python scripts/update_task.py --task-definition production --container-name backend-api --image shughesuk/backend:${{ needs.deploy-backend.outputs.sha }}
  #     - name: Run migrations
  #       run: pixi run python scripts/run_task.py --task-definition production --cluster production --command "pixi run python manage.py migrate"
  # terraform:
  #   needs:
  #     - deploy-backend
  #     - run-migrations
  #   name: "Terraform Apply"
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: terraform-apply
  #       uses: dflook/terraform-apply@v1.42.0
  #       with:
  #         path: ./terraform
  #         auto_approve: true
  #         workspace: resume-workspace
  #         variables: |
  #           app_image = "shughesuk/backend:${{ needs.deploy-backend.outputs.sha }}"
  #       env:
  #         TERRAFORM_CLOUD_TOKENS: app.terraform.io=${{ secrets.TF_API_TOKEN }}
  deploy-frontend:
    environment: frontend-production
    concurrency: frontend-production
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::905418398753:role/github-actions-role
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: "us-east-1"
      - uses: prefix-dev/setup-pixi@v0.5.1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          cache: true
          locked: true
      - name: Deploy
        run: pixi run frontend-deploy
